matrix:
  include:
    - os: linux
      dist: xenial
      sudo: required
      language: python
      python: 3.5
      services:
        - xvfb
    - os: linux
      dist: xenial
      sudo: required
      language: python
      python: 3.6
      services:
        - xvfb
    - os: linux
      dist: xenial
      sudo: required
      language: python
      python: 3.7
      services:
        - xvfb
    - os: linux
      dist: xenial
      arch: arm64
      sudo: required
      language: python
      python: 3.5
      services:
        - xvfb
      env:
        - QT_QPA_PLATFORM="offscreen"

before_install:
  # Linux packages needed for Qt to work.
  - sudo apt-get update && sudo apt-get install libxkbcommon-x11-0
  # Use a new virtual environment with system packages for arm64
  - if [ "$TRAVIS_CPU_ARCH" = "arm64" ]; then deactivate && virtualenv venv --python=python3 --system-site-packages && source venv/bin/activate; fi
  # Check everything was correctly installed
  - echo $PATH
  - python --version
  - python -c "import platform, struct; print(platform.machine(), struct.calcsize('P') * 8)"
  - python -c "import sys; print(sys.executable)"
  - python -m pip --version
  - pip --version
  - pip config list
  - pip freeze

install:
  # In arm64 install PyQt5 dependencies via apt, numpy and pygame via piwheels
  - if [ "$TRAVIS_CPU_ARCH" = "arm64" ]; then sudo apt-get install python3-pyqt5 python3-pyqt5.qsci python3-pyqt5.qtserialport python3-pyqt5.qtsvg libxmlsec1-dev libxml2 libxml2-dev; fi
  - if [ "$TRAVIS_CPU_ARCH" = "arm64" ]; then pip install numpy pygame --extra-index-url="https://www.piwheels.org/simple" --platform="linux_armv7l" --only-binary=":all:" --target="$(python -c 'import sysconfig; print(sysconfig.get_paths()["purelib"])')"; fi
  # Install Mu and its dependencies
  - pip install .[dev]
  # Install PyInstaller
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then  pip3 install pyinstaller==3.3.1; fi
  # Check everything was correctly installed
  - pip freeze

script:
  # Run only the tests on 3.5 and the full checker elsewhere
  - if [ "$TRAVIS_PYTHON_VERSION" = "3.5" ]; then make coverage; fi
  - if [ "$TRAVIS_PYTHON_VERSION" != "3.5" ]; then make check; fi

  # Package it in Linux with PyInstaller
  - pyinstaller package/pyinstaller.spec
  - du -sk dist/
  - mv dist/mu dist/mu_$(date '+%Y-%m-%d_%H_%M')_${TRAVIS_BRANCH}_${TRAVIS_COMMIT:0:7}.bin

# Deploy the build version in an S3 bucket
deploy:
  provider: s3
  access_key_id: AKIAJYJV7NN6HVHCX5NQ
  secret_access_key:
    secure: gTy5x7D8J+6VTwR4CY+cxsnV5lGsMYFPoU9kSIwQNvNviZyQDR0Qan+VjUzUa3kvOEVxpBjiA6KkRPtvXslZNgJI8aVzm2GVzEh+9kyDIY3k9LLLy6xpK1q4jFscup+yAhLpgeIVjudp4ClxZy6Q4M28DM/ylAdd3JqiLzwtZr1wYfCa1L075SBqAj+Nj8nP02G2s5kF2hTC5MiQPfAic9jGdiuoFnIs3vN2HpojqZ5sQHBnyeZWX4OWoCSdJdwitdORl25HnFYBzV1vwhqRSgGrW5ssxaF6FEf9nVQMSmxRRvYVRU0lFAmWaTmPNbujsT4/oITXIHnblCD/d3oop5D5clMKkScC7r2v7oF+TcKEJc8IJRQ5eYwhaVhSLIjQmf+P8bZZUhLGHfKUxCl2IC9UjUDwrH7oCy14Le16wVQ+x+tFQKgK4jdZjpT65uRm2bfW+odvxRUiQw2NXoVW9TbXkGmpn7unnlcGB65RVp23oT4gkq2IuGxf+nRa56+N4BybMGxguiT1KG+/lu8P04bjskbrT5SxHQBIpmDRLwSPCZdlTM7+u+ywHxIbl9dhAmSwkqvOYah75VIt4d1PAmPP7pW48hIYIQLSc7ygWoPvZFww+qH8alkmyaHjtUvAe4HHvrQrjvREsYgK3694FBdIsN/BWWUT7rB5Qz/fzF4=
  bucket: ardublockly-builds
  region: us-west-2
  skip_cleanup: true
  local-dir: dist/
  upload-dir: microbit/tests/$TRAVIS_OS_NAME
  acl: public_read
  on:
    repo: carlosperate/mu
    all_branches: true
    python: 3.6

notifications:
  email:
    on_success: change
    on_failure: change
